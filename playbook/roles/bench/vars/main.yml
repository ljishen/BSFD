---
remote_workdir: /tmp/BSFD

benchmarks:
  - name: sysbench
    desc: "CPU & Memory & File I/O performance test"
    skip: True
    docker_image: ljishen/sysbench
    configs:
      # CPU performance test
      - desc: "CPU performance test: max-prime=2000"
        args:
          run: "##OUTPUT_FILE## --test=cpu --cpu-max-prime=2000 run"
          docker_run: "-v `pwd`:/root/results ##CONTAINER_ID## /root/results/##OUTPUT_FILE## --test=cpu --cpu-max-prime=2000 run"
        output_file_suffix: "cpu_2000.prof"
      - desc: "CPU performance test: max-prime=10000"
        args:
          run: "##OUTPUT_FILE## --test=cpu --cpu-max-prime=10000 run"
          docker_run: "-v `pwd`:/root/results ##CONTAINER_ID## /root/results/##OUTPUT_FILE## --test=cpu --cpu-max-prime=10000 run"
        output_file_suffix: "cpu_10000.prof"
      - desc: "CPU performance test: max-prime=50000"
        args:
          run: "##OUTPUT_FILE## --test=cpu --cpu-max-prime=50000 run"
          docker_run: "-v `pwd`:/root/results ##CONTAINER_ID## /root/results/##OUTPUT_FILE## --test=cpu --cpu-max-prime=50000 run"
        output_file_suffix: "cpu_50000.prof"
 
      # Memory functions speed test
      - desc: "Memory functions speed test: memory-oper=read, memory-access-mode=seq"
        args:
          run: "##OUTPUT_FILE## --test=memory --memory-oper=read --memory-access-mode=seq run"
          docker_run: "-v `pwd`:/root/results ##CONTAINER_ID## /root/results/##OUTPUT_FILE## --test=memory --memory-oper=read --memory-access-mode=seq run"
        output_file_suffix: "memory_read_seq.prof"
      - desc: "Memory functions speed test: memory-oper=write, memory-access-mode=seq"
        args:
          run: "##OUTPUT_FILE## --test=memory --memory-oper=write --memory-access-mode=seq run"
          docker_run: "-v `pwd`:/root/results ##CONTAINER_ID## /root/results/##OUTPUT_FILE## --test=memory --memory-oper=write --memory-access-mode=seq run"
        output_file_suffix: "memory_write_seq.prof"
      - desc: "Memory functions speed test: memory-oper=read, memory-access-mode=rnd"
        args:
          run: "##OUTPUT_FILE## --test=memory --memory-oper=read --memory-access-mode=rnd run"
          docker_run: "-v `pwd`:/root/results ##CONTAINER_ID## /root/results/##OUTPUT_FILE## --test=memory --memory-oper=read --memory-access-mode=rnd run"
        output_file_suffix: "memory_read_rnd.prof"
      - desc: "Memory functions speed test: memory-oper=write, memory-access-mode=rnd"
        args:
          run: "##OUTPUT_FILE## --test=memory --memory-oper=write --memory-access-mode=rnd run"
          docker_run: "-v `pwd`:/root/results ##CONTAINER_ID## /root/results/##OUTPUT_FILE## --test=memory --memory-oper=write --memory-access-mode=rnd run"
        output_file_suffix: "memory_write_rnd.prof"

      # File I/O test
      - desc: "File I/O test: file preparation"
        args:
          run: "##OUTPUT_FILE## --test=fileio prepare"
          docker_run: "-v `pwd`:/root/results -v `pwd`/workdir:/root/workdir ##CONTAINER_ID## /root/results/##OUTPUT_FILE## --test=fileio prepare"
        output_file_suffix: "fileio_prepare.log"
      - desc: "File I/O test: file-test-mode=seqrewr"
        args:
          run: "##OUTPUT_FILE## --test=fileio --file-test-mode=seqrewr run"
          docker_run: "-v `pwd`:/root/results -v `pwd`/workdir:/root/workdir ##CONTAINER_ID## /root/results/##OUTPUT_FILE## --test=fileio --file-test-mode=seqrewr run"
        output_file_suffix: "fileio_seqrewr.prof"
      - desc: "File I/O test: file cleanup"
        args:
          run: "##OUTPUT_FILE## --test=fileio cleanup"
          docker_run: "-v `pwd`:/root/results -v `pwd`/workdir:/root/workdir ##CONTAINER_ID## /root/results/##OUTPUT_FILE## --test=fileio cleanup"
        output_file_suffix: "fileio_cleanup.log"

  - name: stress-ng
    desc: "CPU & Memory & I/O & Network performance test"
    docker_image: ljishen/stress-ng
    ignore_errors: True
    configs:
      # CPU performance test
      - desc: "CPU performance test: class=cpu"
        args:
          run: "--yaml ##OUTPUT_FILE## --timeout 10 --class cpu --sequential 1"
          docker_run: "--cap-add=SYS_RESOURCE -v `pwd`:/root/results ##CONTAINER_ID## --yaml results/##OUTPUT_FILE## --timeout 10 --class cpu --sequential 1"
        output_file_suffix: "cpu.prof"

      # Memory performance test
      - desc: "Memory performance test: class=memory"
        args:
          run: "--yaml ##OUTPUT_FILE## --timeout 10 --class memory --sequential 1"
          docker_run: "--cap-add=SYS_RESOURCE -v `pwd`:/root/results ##CONTAINER_ID## --yaml results/##OUTPUT_FILE## --timeout 10 --class memory --sequential 1"
        output_file_suffix: "memory.prof"

      # I/O performance test
      - desc: "I/O performance test: class=io"
        args:
          run: "--yaml ##OUTPUT_FILE## --timeout 10 --class io --sequential 1"
          docker_run: "--cap-add=SYS_RESOURCE -v `pwd`:/root/results ##CONTAINER_ID## --yaml results/##OUTPUT_FILE## --timeout 10 --class io --sequential 1"
        output_file_suffix: "io.prof"

      # Network performance test
      - desc: "Network performance test: class=network"
        args:
          run: "--yaml ##OUTPUT_FILE## --timeout 10 --class network --sequential 1"
          docker_run: "--cap-add=SYS_RESOURCE -v `pwd`:/root/results ##CONTAINER_ID## --yaml results/##OUTPUT_FILE## --timeout 10 --class network --sequential 1"
        output_file_suffix: "network.prof"

  - name: iperf3
    desc: "Network performance test"
    docker_image: ljishen/iperf3
    skip: True
    configs:
      # TODO
